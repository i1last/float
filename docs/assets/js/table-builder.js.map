{"version":3,"sources":["components/table/table-builder.js"],"names":["classes","timetable","definitions","createTable","tableRequest","tableParams","jsonTable","jsonHeader","dayRequest","document","querySelector","value","gradeRequest","currentDay","Date","toLocaleString","weekday","toLowerCase","headerPath","tablePath","section","grade","sectionRequest","fetch","then","res","json","innerResult","buildTable","outerHTML","catch","err","message","includes","callback","innerHTML","table","createElement","thead","tbody","classList","add","appendChild","columnOrderKey","Object","keys","columnOrderValue","map","x","_iterator","_createForOfIteratorHelper","s","_step","n","done","head","th","innerText","e","f","iRow","_iterator2","_step2","row","tr","iData","_iterator3","_step3","_n$classList","key","td","data","toString","replace"],"mappings":"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","file":"table-builder.js","sourcesContent":["//////////////////////////////////////////////////\r\n//// Import this file before others table*.js ////\r\n//////////////////////////////////////////////////\r\nconst classes = {\r\n  timetable: [\r\n    [\"table__head\", \"text--p-small\"],\r\n    [\"table__data\", \"text--p-small\"],\r\n    [\r\n      \"table__data\",\r\n      \"table__data--center\",\r\n      \"table__data--no-wrap\",\r\n      \"text--p-small\",\r\n    ],\r\n    [\r\n      \"table__data\",\r\n      \"table__data--center\",\r\n      \"table__data--no-wrap\",\r\n      \"text--p-small\",\r\n    ],\r\n    [\"table__data\"],\r\n  ],\r\n  definitions: [\r\n    [\"table__head\", \"text--p-small\"],\r\n    [\"table__data\", \"text--p-small\"],\r\n    [\"table__data\", \"table__data--long-width\", \"text--p-small\"],\r\n    [\"table__data\", \"table__data--short-width\", \"text--p-small\"],\r\n    [\"table__data\", \"table__data--center\", \"text--p-small\"],\r\n  ],\r\n};\r\n\r\nfunction createTable(tableRequest) {\r\n  let tableParams;\r\n  switch (tableRequest) {\r\n    case \"timetable\":\r\n      let dayRequest = document.querySelector(\".day-selector\").value;\r\n      const gradeRequest = document.querySelector(\".grade-selector\").value;\r\n      const currentDay = new Date()\r\n        .toLocaleString(\"en-US\", { weekday: \"long\" })\r\n        .toLowerCase();\r\n\r\n      if (dayRequest == \"current\") {\r\n        dayRequest = currentDay != \"sunday\" ? currentDay : \"monday\";\r\n      }\r\n\r\n      tableParams = {\r\n        headerPath: \"timetables/header.json\",\r\n        tablePath: `timetables/timetable-${gradeRequest}.json`,\r\n        section: dayRequest,\r\n        classes: classes.timetable,\r\n        grade: gradeRequest,\r\n      };\r\n      break;\r\n    case \"definitions\":\r\n      const sectionRequest = document.querySelector(\".section-selector\").value;\r\n\r\n      tableParams = {\r\n        headerPath: \"definitions/header.json\",\r\n        tablePath: `definitions/definitions.json`,\r\n        section: sectionRequest,\r\n        classes: classes.definitions,\r\n        grade: gradeRequest,\r\n      };\r\n      break;\r\n  }\r\n\r\n  let jsonTable;\r\n  let jsonHeader;\r\n  fetch(`/float/database/tables/${tableParams.tablePath}`)\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n      jsonTable = json;\r\n      fetch(`/float/database/tables/${tableParams.headerPath}`)\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          jsonHeader = json;\r\n          innerResult(\r\n            buildTable(\r\n              jsonTable,\r\n              jsonHeader,\r\n              tableParams.section,\r\n              tableParams.classes,\r\n            ).outerHTML,\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          if (err.message.includes(\"JSON.parse\"))\r\n            innerResult(\r\n              `Произошла ошибка при загрузке таблицы: Таблица не найдена`,\r\n            );\r\n          else innerResult(`Произошла ошибка при загрузке таблицы: ${err}`);\r\n        });\r\n    })\r\n    .catch((err) => {\r\n      if (err.message.includes(\"JSON.parse\"))\r\n        innerResult(\r\n          `Произошла ошибка при загрузке таблицы: Таблица не найдена`,\r\n        );\r\n      else innerResult(`Произошла ошибка при загрузке таблицы: ${err}`);\r\n    });\r\n}\r\n\r\nfunction innerResult(callback) {\r\n  document.querySelector(\".js-table-container\").innerHTML = callback;\r\n}\r\n\r\nfunction buildTable(jsonTable, jsonHeader, section, classes) {\r\n  let table = document.createElement(\"table\");\r\n  let thead = document.createElement(\"thead\");\r\n  let tbody = document.createElement(\"tbody\");\r\n\r\n  table.classList.add(\"table\", \"text--p-small\");\r\n  table.appendChild(thead);\r\n  table.appendChild(tbody);\r\n\r\n  const columnOrderKey = Object.keys(jsonHeader);\r\n  const columnOrderValue = columnOrderKey.map((x) => jsonHeader[x]);\r\n\r\n  for (const head of columnOrderValue) {\r\n    let th = document.createElement(\"th\");\r\n    th.classList.add(\"table__head\");\r\n    th.innerText = head;\r\n    thead.appendChild(th);\r\n  }\r\n\r\n  let iRow = 0;\r\n  for (const row of jsonTable[section][1]) {\r\n    let tr = document.createElement(\"tr\");\r\n    tr.classList.add(\"table__row\");\r\n    switch (iRow) {\r\n      case 0:\r\n        tr.classList.add(\"table__row--border-bottom\");\r\n        break;\r\n      default:\r\n        tr.classList.add(\"table__row--border-top\");\r\n    }\r\n\r\n    let iData = 0;\r\n    for (const key of columnOrderKey) {\r\n      let td = document.createElement(\"td\");\r\n\r\n      if (classes[iData] != \"\") td.classList.add(...classes[iData]);\r\n      switch (iData) {\r\n        case 0:\r\n          break;\r\n        case 1:\r\n          td.classList.add(\"table__data--border-right\");\r\n          break;\r\n        default:\r\n          td.classList.add(\"table__data--border-left\");\r\n      }\r\n\r\n      let data = row[key]\r\n        .toString()\r\n        .replace(\r\n          /<a l=/g,\r\n          '<a class=\"link link--hover-darken link--hover-red table__item\" target=\"_blank\" href=',\r\n        )\r\n        .replace(\r\n          /<d s='(.*?)'>(.*?)<\\/d>/g,\r\n          '<details class=\"details table__item\"><summary class=\"details__summary\">$1</summary>$2</details>',\r\n        )\r\n        .replace(/<p>(.*?)<\\/p>/g, '<p class=\"table__item\">$1</p>');\r\n      td.innerHTML = data;\r\n      tr.appendChild(td);\r\n      iData++;\r\n    }\r\n\r\n    tbody.appendChild(tr);\r\n    iRow++;\r\n  }\r\n  return table;\r\n}\r\n"]}