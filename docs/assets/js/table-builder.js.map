{"version":3,"sources":["components/table/table-builder.js"],"names":["classes","timetable","definitions","createTable","tableRequest","tableParams","jsonTable","jsonHeader","dayRequest","document","querySelector","value","gradeRequest","currentDay","Date","toLocaleString","weekday","toLowerCase","headerPath","tablePath","section","grade","sectionRequest","fetch","then","res","json","innerResult","buildTable","outerHTML","catch","err","message","includes","callback","innerHTML","table","createElement","thead","tbody","classList","add","appendChild","columnOrderKey","Object","keys","columnOrderValue","map","x","_iterator","_createForOfIteratorHelper","s","_step","n","done","head","th","innerText","e","f","iRow","_iterator2","_step2","row","tr","iData","_iterator3","_step3","_n$classList","key","td","data","toString","replace"],"mappings":"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","file":"table-builder.js","sourcesContent":["//////////////////////////////////////////////////\n//// Import this file before others table*.js ////\n//////////////////////////////////////////////////\nconst classes = {\n  timetable: [\n    [\"table__head\", \"text--p-small\"],\n    [\"table__data\", \"text--p-small\"],\n    [\n      \"table__data\",\n      \"table__data--center\",\n      \"table__data--no-wrap\",\n      \"text--p-small\",\n    ],\n    [\n      \"table__data\",\n      \"table__data--center\",\n      \"table__data--no-wrap\",\n      \"text--p-small\",\n    ],\n    [\"table__data\"],\n  ],\n  definitions: [\n    [\"table__head\", \"text--p-small\"],\n    [\"table__data\", \"text--p-small\"],\n    [\"table__data\", \"table__data--long-width\", \"text--p-small\"],\n    [\"table__data\", \"table__data--short-width\", \"text--p-small\"],\n    [\"table__data\", \"table__data--center\", \"text--p-small\"],\n  ],\n};\n\nfunction createTable(tableRequest) {\n  let tableParams;\n  switch (tableRequest) {\n    case \"timetable\":\n      let dayRequest = document.querySelector(\".day-selector\").value;\n      const gradeRequest = document.querySelector(\".grade-selector\").value;\n      const currentDay = new Date()\n        .toLocaleString(\"en-US\", { weekday: \"long\" })\n        .toLowerCase();\n\n      if (dayRequest == \"current\") {\n        dayRequest = currentDay != \"sunday\" ? currentDay : \"monday\";\n      }\n\n      tableParams = {\n        headerPath: \"timetables/header.json\",\n        tablePath: `timetables/timetable-${gradeRequest}.json`,\n        section: dayRequest,\n        classes: classes.timetable,\n        grade: gradeRequest,\n      };\n      break;\n    case \"definitions\":\n      const sectionRequest = document.querySelector(\".section-selector\").value;\n\n      tableParams = {\n        headerPath: \"definitions/header.json\",\n        tablePath: `definitions/definitions.json`,\n        section: sectionRequest,\n        classes: classes.definitions,\n        grade: gradeRequest,\n      };\n      break;\n  }\n\n  let jsonTable;\n  let jsonHeader;\n  fetch(`/float/database/tables/${tableParams.tablePath}`)\n    .then((res) => res.json())\n    .then((json) => {\n      jsonTable = json;\n      fetch(`/float/database/tables/${tableParams.headerPath}`)\n        .then((res) => res.json())\n        .then((json) => {\n          jsonHeader = json;\n          innerResult(\n            buildTable(\n              jsonTable,\n              jsonHeader,\n              tableParams.section,\n              tableParams.classes,\n            ).outerHTML,\n          );\n        })\n        .catch((err) => {\n          if (err.message.includes(\"JSON.parse\"))\n            innerResult(\n              `Произошла ошибка при загрузке таблицы: Таблица не найдена`,\n            );\n          else innerResult(`Произошла ошибка при загрузке таблицы: ${err}`);\n        });\n    })\n    .catch((err) => {\n      if (err.message.includes(\"JSON.parse\"))\n        innerResult(\n          `Произошла ошибка при загрузке таблицы: Таблица не найдена`,\n        );\n      else innerResult(`Произошла ошибка при загрузке таблицы: ${err}`);\n    });\n}\n\nfunction innerResult(callback) {\n  document.querySelector(\".js-table-container\").innerHTML = callback;\n}\n\nfunction buildTable(jsonTable, jsonHeader, section, classes) {\n  let table = document.createElement(\"table\");\n  let thead = document.createElement(\"thead\");\n  let tbody = document.createElement(\"tbody\");\n\n  table.classList.add(\"table\", \"text--p-small\");\n  table.appendChild(thead);\n  table.appendChild(tbody);\n\n  const columnOrderKey = Object.keys(jsonHeader);\n  const columnOrderValue = columnOrderKey.map((x) => jsonHeader[x]);\n\n  for (const head of columnOrderValue) {\n    let th = document.createElement(\"th\");\n    th.classList.add(\"table__head\");\n    th.innerText = head;\n    thead.appendChild(th);\n  }\n\n  let iRow = 0;\n  for (const row of jsonTable[section][1]) {\n    let tr = document.createElement(\"tr\");\n    tr.classList.add(\"table__row\");\n    switch (iRow) {\n      case 0:\n        tr.classList.add(\"table__row--border-bottom\");\n        break;\n      default:\n        tr.classList.add(\"table__row--border-top\");\n    }\n\n    let iData = 0;\n    for (const key of columnOrderKey) {\n      let td = document.createElement(\"td\");\n\n      if (classes[iData] != \"\") td.classList.add(...classes[iData]);\n      switch (iData) {\n        case 0:\n          break;\n        case 1:\n          td.classList.add(\"table__data--border-right\");\n          break;\n        default:\n          td.classList.add(\"table__data--border-left\");\n      }\n\n      let data = row[key]\n        .toString()\n        .replace(\n          /<a l=/g,\n          '<a class=\"link link--hover-darken link--hover-red table__item\" target=\"_blank\" href=',\n        )\n        .replace(\n          /<d s='(.*?)'>(.*?)<\\/d>/g,\n          '<details class=\"details table__item\"><summary class=\"details__summary\">$1</summary>$2</details>',\n        )\n        .replace(/<p>(.*?)<\\/p>/g, '<p class=\"table__item\">$1</p>');\n      td.innerHTML = data;\n      tr.appendChild(td);\n      iData++;\n    }\n\n    tbody.appendChild(tr);\n    iRow++;\n  }\n  return table;\n}\n"]}