{"version":3,"sources":["components/table/table-builder.js"],"names":["classes","timetable","definitions","createTable","tableRequest","tableParams","jsonTable","jsonHeader","dayRequest","document","querySelector","value","gradeRequest","currentDay","Date","toLocaleString","weekday","toLowerCase","headerPath","tablePath","section","grade","sectionRequest","fetch","then","res","json","innerResult","buildTable","outerHTML","catch","err","message","callback","innerHTML","table","createElement","thead","tbody","classList","add","appendChild","columnOrderKey","Object","keys","columnOrderValue","map","x","_iterator","_createForOfIteratorHelper","s","_step","n","done","head","th","innerText","e","f","iRow","_iterator2","_step2","row","tr","iData","_iterator3","_step3","_n$classList","key","td","data","toString","replace"],"mappings":"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","file":"table-builder.js","sourcesContent":["//////////////////////////////////////////////////\n//// Import this file before others table*.js ////\n//////////////////////////////////////////////////\nconst classes = {\n    timetable: [\n        ['table__head', 'text--p-small'],\n        ['table__data', 'text--p-small'],\n        ['table__data', 'table__data--center', 'table__data--no-wrap', 'text--p-small'],\n        ['table__data', 'table__data--center', 'table__data--no-wrap', 'text--p-small'],\n        ['table__data']\n    ],\n    definitions: [\n        ['table__head', 'text--p-small'],\n        ['table__data', 'text--p-small'],\n        ['table__data', 'table__data--long-width', 'text--p-small'],\n        ['table__data', 'table__data--short-width', 'text--p-small'],\n        ['table__data', 'table__data--center', 'text--p-small']\n    ]\n};\n\nfunction createTable(tableRequest) {\n    let tableParams;\n    switch (tableRequest) {\n        case 'timetable':\n            let dayRequest = document.querySelector('.day-selector').value;\n            const gradeRequest = document.querySelector('.grade-selector').value;\n            const currentDay = (new Date()).toLocaleString('en-US', { weekday: 'long' }).toLowerCase();\n\n            if (dayRequest == 'current') {\n                dayRequest = (currentDay != 'sunday') ? currentDay : 'monday';\n            }\n\n            tableParams = {\n                headerPath: 'timetables/header.json',\n                tablePath: `timetables/timetable-${gradeRequest}.json`,\n                section: dayRequest,\n                classes: classes.timetable,\n                grade: gradeRequest\n            };\n            break;\n        case 'definitions':\n            const sectionRequest = document.querySelector('.section-selector').value;\n\n            tableParams = {\n                headerPath: 'definitions/header.json',\n                tablePath: `definitions/definitions.json`,\n                section: sectionRequest,\n                classes: classes.definitions,\n                grade: gradeRequest\n            };\n            break;\n    }\n\n    let jsonTable;\n    let jsonHeader;\n    fetch(`/database/tables/${tableParams.tablePath}`).then(res => res.json()).then(json => {\n        jsonTable = json;\n        fetch(`/database/tables/${tableParams.headerPath}`).then(res => res.json()).then(json => {\n            jsonHeader = json;\n            innerResult(buildTable(jsonTable, jsonHeader, tableParams.section, tableParams.classes).outerHTML);\n        }).catch(err => {\n            if (err.message == 'JSON.parse: unexpected end of data at line 1 column 1 of the JSON data') innerResult(`Произошла ошибка при загрузке таблицы: Таблица не найдена`);\n            else innerResult(`Произошла ошибка при загрузке таблицы: ${err}`);\n        });\n    }).catch(err => {\n        if (err.message == 'JSON.parse: unexpected end of data at line 1 column 1 of the JSON data') innerResult(`Произошла ошибка при загрузке таблицы: Таблица не найдена`);\n        else innerResult(`Произошла ошибка при загрузке таблицы: ${err}`);\n    });\n}\n\nfunction innerResult(callback) {\n    document.querySelector('.js-table-container').innerHTML = callback;\n}\n\nfunction buildTable(jsonTable, jsonHeader, section, classes) {\n    let table = document.createElement('table');\n    let thead = document.createElement('thead');\n    let tbody = document.createElement('tbody');\n\n    table.classList.add('table', 'text--p-small');\n    table.appendChild(thead);\n    table.appendChild(tbody);\n\n    const columnOrderKey = Object.keys(jsonHeader);\n    const columnOrderValue = columnOrderKey.map(x => jsonHeader[x]);\n\n    for (const head of columnOrderValue) {\n        let th = document.createElement('th');\n        th.classList.add('table__head');\n        th.innerText = head;\n        thead.appendChild(th);\n    }\n\n    let iRow = 0;\n    for (const row of jsonTable[section][1]) {\n        let tr = document.createElement('tr');\n        tr.classList.add('table__row');\n        switch (iRow) {\n            case 0:\n                tr.classList.add('table__row--border-bottom');\n                break;\n            default:\n                tr.classList.add('table__row--border-top');\n        }\n\n        let iData = 0;\n        for (const key of columnOrderKey) {\n            let td = document.createElement('td');\n\n            if (classes[iData] != '') td.classList.add(...classes[iData]);\n            switch (iData) {\n                case 0:\n                    break;\n                case 1:\n                    td.classList.add('table__data--border-right');\n                    break;\n                default:\n                    td.classList.add('table__data--border-left');\n            }\n\n            let data = (row[key].toString()\n                .replace(/<a l=/g, '<a class=\"link link--hover-darken link--hover-red table__item\" target=\"_blank\" href=')\n                .replace(/<d s='(.*?)'>(.*?)<\\/d>/g, '<details class=\"details table__item\"><summary class=\"details__summary\">$1</summary>$2</details>')\n                .replace(/<p>(.*?)<\\/p>/g, '<p class=\"table__item\">$1</p>')\n                );\n            td.innerHTML = data;\n            tr.appendChild(td);\n            iData++;\n        }\n\n        tbody.appendChild(tr);\n        iRow++;\n    }\n    return table;\n}\n"]}